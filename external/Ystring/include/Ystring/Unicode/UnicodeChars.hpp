//****************************************************************************
// Copyright Â© 2013 Jan Erik Breimo. All rights reserved.
// Created by Jan Erik Breimo on 2013-07-01
//
// This file is distributed under the Simplified BSD License.
// License text is included with the source distribution.
//****************************************************************************
#pragma once

#include <cstdint>

/** @file
  * @brief Defines constants for some common non-ASCII unicode code-points.
  */

namespace Ystring { namespace Unicode
{
    static const char32_t START_OF_HEADING = 0x0001u;
    static const char32_t START_OF_TEXT = 0x0002u;
    static const char32_t END_OF_TEXT = 0x0003u;
    static const char32_t END_OF_TRANSMISSION = 0x0004u;
    static const char32_t ENQUIRY = 0x0005u;
    static const char32_t ACKNOWLEDGE = 0x0006u;
    static const char32_t BELL = 0x0007u;
    static const char32_t BACKSPACE = 0x0008u;
    static const char32_t CHARACTER_TABULATION = 0x0009u;
    static const char32_t LINE_FEED = 0x000Au;
    static const char32_t LINE_TABULATION = 0x000Bu;
    static const char32_t FORM_FEED = 0x000Cu;
    static const char32_t CARRIAGE_RETURN = 0x000Du;
    static const char32_t SHIFT_OUT = 0x000Eu;
    static const char32_t SHIFT_IN = 0x000Fu;
    static const char32_t DATA_LINK_ESCAPE = 0x0010u;
    static const char32_t DEVICE_CONTROL_ONE = 0x0011u;
    static const char32_t DEVICE_CONTROL_TWO = 0x0012u;
    static const char32_t DEVICE_CONTROL_THREE = 0x0013u;
    static const char32_t DEVICE_CONTROL_FOUR = 0x0014u;
    static const char32_t NEGATIVE_ACKNOWLEDGE = 0x0015u;
    static const char32_t SYNCHRONOUS_IDLE = 0x0016u;
    static const char32_t END_OF_TRANSMISSION_BLOCK = 0x0017u;
    static const char32_t CANCEL = 0x0018u;
    static const char32_t END_OF_MEDIUM = 0x0019u;
    static const char32_t SUBSTITUTE = 0x001Au;
    static const char32_t ESCAPE = 0x001Bu;
    static const char32_t INFORMATION_SEPARATOR_FOUR = 0x001Cu;
    static const char32_t INFORMATION_SEPARATOR_THREE = 0x001Du;
    static const char32_t INFORMATION_SEPARATOR_TWO = 0x001Eu;
    static const char32_t INFORMATION_SEPARATOR_ONE = 0x001Fu;
    static const char32_t DELETE = 0x007Fu;
    static const char32_t BREAK_PERMITTED_HERE = 0x0082u;
    static const char32_t NO_BREAK_HERE = 0x0083u;
    static const char32_t NEXT_LINE = 0x0085u;
    static const char32_t START_OF_SELECTED_AREA = 0x0086u;
    static const char32_t END_OF_SELECTED_AREA = 0x0087u;
    static const char32_t CHARACTER_TABULATION_SET = 0x0088u;
    static const char32_t CHARACTER_TABULATION_WITH_JUSTIFICATION = 0x0089u;
    static const char32_t LINE_TABULATION_SET = 0x008Au;
    static const char32_t PARTIAL_LINE_FORWARD = 0x008Bu;
    static const char32_t PARTIAL_LINE_BACKWARD = 0x008Cu;
    static const char32_t REVERSE_LINE_FEED = 0x008Du;
    static const char32_t SINGLE_SHIFT_TWO = 0x008Eu;
    static const char32_t SINGLE_SHIFT_THREE = 0x008Fu;
    static const char32_t DEVICE_CONTROL_STRING = 0x0090u;
    static const char32_t PRIVATE_USE_ONE = 0x0091u;
    static const char32_t PRIVATE_USE_TWO = 0x0092u;
    static const char32_t SET_TRANSMIT_STATE = 0x0093u;
    static const char32_t CANCEL_CHARACTER = 0x0094u;
    static const char32_t MESSAGE_WAITING = 0x0095u;
    static const char32_t START_OF_GUARDED_AREA = 0x0096u;
    static const char32_t END_OF_GUARDED_AREA = 0x0097u;
    static const char32_t START_OF_STRING = 0x0098u;
    static const char32_t SINGLE_CHARACTER_INTRODUCER = 0x009Au;
    static const char32_t CONTROL_SEQUENCE_INTRODUCER = 0x009Bu;
    static const char32_t STRING_TERMINATOR = 0x009Cu;
    static const char32_t OPERATING_SYSTEM_COMMAND = 0x009Du;
    static const char32_t PRIVACY_MESSAGE = 0x009Eu;
    static const char32_t APPLICATION_PROGRAM_COMMAND = 0x009Fu;
    static const char32_t NO_BREAK_SPACE = 0x00A0u;
    static const char32_t INVERTED_EXCLAMATION_MARK = 0x00A1u;
    static const char32_t CENT_SIGN = 0x00A2u;
    static const char32_t POUND_SIGN = 0x00A3u;
    static const char32_t CURRENCY_SIGN = 0x00A4u;
    static const char32_t YEN_SIGN = 0x00A5u;
    static const char32_t BROKEN_BAR = 0x00A6u;
    static const char32_t SECTION_SIGN = 0x00A7u;
    static const char32_t DIAERESIS = 0x00A8u;
    static const char32_t COPYRIGHT_SIGN = 0x00A9u;
    static const char32_t FEMININE_ORDINAL_INDICATOR = 0x00AAu;
    static const char32_t LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK = 0x00ABu;
    static const char32_t NOT_SIGN = 0x00ACu;
    static const char32_t SOFT_HYPHEN = 0x00ADu;
    static const char32_t REGISTERED_SIGN = 0x00AEu;
    static const char32_t MACRON = 0x00AFu;
    static const char32_t DEGREE_SIGN = 0x00B0u;
    static const char32_t PLUS_MINUS_SIGN = 0x00B1u;
    static const char32_t SUPERSCRIPT_TWO = 0x00B2u;
    static const char32_t SUPERSCRIPT_THREE = 0x00B3u;
    static const char32_t ACUTE_ACCENT = 0x00B4u;
    static const char32_t MICRO_SIGN = 0x00B5u;
    static const char32_t PILCROW_SIGN = 0x00B6u;
    static const char32_t MIDDLE_DOT = 0x00B7u;
    static const char32_t CEDILLA = 0x00B8u;
    static const char32_t SUPERSCRIPT_ONE = 0x00B9u;
    static const char32_t MASCULINE_ORDINAL_INDICATOR = 0x00BAu;
    static const char32_t RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK = 0x00BBu;
    static const char32_t VULGAR_FRACTION_ONE_QUARTER = 0x00BCu;
    static const char32_t VULGAR_FRACTION_ONE_HALF = 0x00BDu;
    static const char32_t VULGAR_FRACTION_THREE_QUARTERS = 0x00BEu;
    static const char32_t INVERTED_QUESTION_MARK = 0x00BFu;
    static const char32_t LATIN_CAPITAL_A_WITH_GRAVE = 0x00C0u;
    static const char32_t LATIN_CAPITAL_A_WITH_ACUTE = 0x00C1u;
    static const char32_t LATIN_CAPITAL_A_WITH_CIRCUMFLEX = 0x00C2u;
    static const char32_t LATIN_CAPITAL_A_WITH_TILDE = 0x00C3u;
    static const char32_t LATIN_CAPITAL_A_WITH_DIAERESIS = 0x00C4u;
    static const char32_t LATIN_CAPITAL_A_WITH_RING_ABOVE = 0x00C5u;
    static const char32_t LATIN_CAPITAL_AE = 0x00C6u;
    static const char32_t LATIN_CAPITAL_C_WITH_CEDILLA = 0x00C7u;
    static const char32_t LATIN_CAPITAL_E_WITH_GRAVE = 0x00C8u;
    static const char32_t LATIN_CAPITAL_E_WITH_ACUTE = 0x00C9u;
    static const char32_t LATIN_CAPITAL_E_WITH_CIRCUMFLEX = 0x00CAu;
    static const char32_t LATIN_CAPITAL_E_WITH_DIAERESIS = 0x00CBu;
    static const char32_t LATIN_CAPITAL_I_WITH_GRAVE = 0x00CCu;
    static const char32_t LATIN_CAPITAL_I_WITH_ACUTE = 0x00CDu;
    static const char32_t LATIN_CAPITAL_I_WITH_CIRCUMFLEX = 0x00CEu;
    static const char32_t LATIN_CAPITAL_I_WITH_DIAERESIS = 0x00CFu;
    static const char32_t LATIN_CAPITAL_ETH = 0x00D0u;
    static const char32_t LATIN_CAPITAL_N_WITH_TILDE = 0x00D1u;
    static const char32_t LATIN_CAPITAL_O_WITH_GRAVE = 0x00D2u;
    static const char32_t LATIN_CAPITAL_O_WITH_ACUTE = 0x00D3u;
    static const char32_t LATIN_CAPITAL_O_WITH_CIRCUMFLEX = 0x00D4u;
    static const char32_t LATIN_CAPITAL_O_WITH_TILDE = 0x00D5u;
    static const char32_t LATIN_CAPITAL_O_WITH_DIAERESIS = 0x00D6u;
    static const char32_t MULTIPLICATION_SIGN = 0x00D7u;
    static const char32_t LATIN_CAPITAL_O_WITH_STROKE = 0x00D8u;
    static const char32_t LATIN_CAPITAL_U_WITH_GRAVE = 0x00D9u;
    static const char32_t LATIN_CAPITAL_U_WITH_ACUTE = 0x00DAu;
    static const char32_t LATIN_CAPITAL_U_WITH_CIRCUMFLEX = 0x00DBu;
    static const char32_t LATIN_CAPITAL_U_WITH_DIAERESIS = 0x00DCu;
    static const char32_t LATIN_CAPITAL_Y_WITH_ACUTE = 0x00DDu;
    static const char32_t LATIN_CAPITAL_THORN = 0x00DEu;
    static const char32_t LATIN_SMALL_SHARP_S = 0x00DFu;
    static const char32_t LATIN_SMALL_A_WITH_GRAVE = 0x00E0u;
    static const char32_t LATIN_SMALL_A_WITH_ACUTE = 0x00E1u;
    static const char32_t LATIN_SMALL_A_WITH_CIRCUMFLEX = 0x00E2u;
    static const char32_t LATIN_SMALL_A_WITH_TILDE = 0x00E3u;
    static const char32_t LATIN_SMALL_A_WITH_DIAERESIS = 0x00E4u;
    static const char32_t LATIN_SMALL_A_WITH_RING_ABOVE = 0x00E5u;
    static const char32_t LATIN_SMALL_AE = 0x00E6u;
    static const char32_t LATIN_SMALL_C_WITH_CEDILLA = 0x00E7u;
    static const char32_t LATIN_SMALL_E_WITH_GRAVE = 0x00E8u;
    static const char32_t LATIN_SMALL_E_WITH_ACUTE = 0x00E9u;
    static const char32_t LATIN_SMALL_E_WITH_CIRCUMFLEX = 0x00EAu;
    static const char32_t LATIN_SMALL_E_WITH_DIAERESIS = 0x00EBu;
    static const char32_t LATIN_SMALL_I_WITH_GRAVE = 0x00ECu;
    static const char32_t LATIN_SMALL_I_WITH_ACUTE = 0x00EDu;
    static const char32_t LATIN_SMALL_I_WITH_CIRCUMFLEX = 0x00EEu;
    static const char32_t LATIN_SMALL_I_WITH_DIAERESIS = 0x00EFu;
    static const char32_t LATIN_SMALL_ETH = 0x00F0u;
    static const char32_t LATIN_SMALL_N_WITH_TILDE = 0x00F1u;
    static const char32_t LATIN_SMALL_O_WITH_GRAVE = 0x00F2u;
    static const char32_t LATIN_SMALL_O_WITH_ACUTE = 0x00F3u;
    static const char32_t LATIN_SMALL_O_WITH_CIRCUMFLEX = 0x00F4u;
    static const char32_t LATIN_SMALL_O_WITH_TILDE = 0x00F5u;
    static const char32_t LATIN_SMALL_O_WITH_DIAERESIS = 0x00F6u;
    static const char32_t DIVISION_SIGN = 0x00F7u;
    static const char32_t LATIN_SMALL_O_WITH_STROKE = 0x00F8u;
    static const char32_t LATIN_SMALL_U_WITH_GRAVE = 0x00F9u;
    static const char32_t LATIN_SMALL_U_WITH_ACUTE = 0x00FAu;
    static const char32_t LATIN_SMALL_U_WITH_CIRCUMFLEX = 0x00FBu;
    static const char32_t LATIN_SMALL_U_WITH_DIAERESIS = 0x00FCu;
    static const char32_t LATIN_SMALL_Y_WITH_ACUTE = 0x00FDu;
    static const char32_t LATIN_SMALL_THORN = 0x00FEu;
    static const char32_t LATIN_SMALL_Y_WITH_DIAERESIS = 0x00FFu;
    static const char32_t COMBINING_GRAVE_ACCENT = 0x0300u;
    static const char32_t COMBINING_ACUTE_ACCENT = 0x0301u;
    static const char32_t COMBINING_CIRCUMFLEX_ACCENT = 0x0302u;
    static const char32_t COMBINING_TILDE = 0x0303u;
    static const char32_t COMBINING_MACRON = 0x0304u;
    static const char32_t COMBINING_OVERLINE = 0x0305u;
    static const char32_t COMBINING_BREVE = 0x0306u;
    static const char32_t COMBINING_DOT_ABOVE = 0x0307u;
    static const char32_t COMBINING_DIAERESIS = 0x0308u;
    static const char32_t COMBINING_HOOK_ABOVE = 0x0309u;
    static const char32_t COMBINING_RING_ABOVE = 0x030Au;
    static const char32_t COMBINING_DOUBLE_ACUTE_ACCENT = 0x030Bu;
    static const char32_t COMBINING_CARON = 0x030Cu;
    static const char32_t COMBINING_VERTICAL_LINE_ABOVE = 0x030Du;
    static const char32_t COMBINING_DOUBLE_VERTICAL_LINE_ABOVE = 0x030Eu;
    static const char32_t COMBINING_DOUBLE_GRAVE_ACCENT = 0x030Fu;
    static const char32_t COMBINING_CANDRABINDU = 0x0310u;
    static const char32_t COMBINING_INVERTED_BREVE = 0x0311u;
    static const char32_t COMBINING_TURNED_COMMA_ABOVE = 0x0312u;
    static const char32_t COMBINING_COMMA_ABOVE = 0x0313u;
    static const char32_t COMBINING_REVERSED_COMMA_ABOVE = 0x0314u;
    static const char32_t COMBINING_COMMA_ABOVE_RIGHT = 0x0315u;
    static const char32_t COMBINING_GRAVE_ACCENT_BELOW = 0x0316u;
    static const char32_t COMBINING_ACUTE_ACCENT_BELOW = 0x0317u;
    static const char32_t COMBINING_LEFT_TACK_BELOW = 0x0318u;
    static const char32_t COMBINING_RIGHT_TACK_BELOW = 0x0319u;
    static const char32_t COMBINING_LEFT_ANGLE_ABOVE = 0x031Au;
    static const char32_t COMBINING_HORN = 0x031Bu;
    static const char32_t COMBINING_LEFT_HALF_RING_BELOW = 0x031Cu;
    static const char32_t COMBINING_UP_TACK_BELOW = 0x031Du;
    static const char32_t COMBINING_DOWN_TACK_BELOW = 0x031Eu;
    static const char32_t COMBINING_PLUS_SIGN_BELOW = 0x031Fu;
    static const char32_t COMBINING_MINUS_SIGN_BELOW = 0x0320u;
    static const char32_t COMBINING_PALATALIZED_HOOK_BELOW = 0x0321u;
    static const char32_t COMBINING_RETROFLEX_HOOK_BELOW = 0x0322u;
    static const char32_t COMBINING_DOT_BELOW = 0x0323u;
    static const char32_t COMBINING_DIAERESIS_BELOW = 0x0324u;
    static const char32_t COMBINING_RING_BELOW = 0x0325u;
    static const char32_t COMBINING_COMMA_BELOW = 0x0326u;
    static const char32_t COMBINING_CEDILLA = 0x0327u;
    static const char32_t COMBINING_OGONEK = 0x0328u;
    static const char32_t COMBINING_VERTICAL_LINE_BELOW = 0x0329u;
    static const char32_t COMBINING_BRIDGE_BELOW = 0x032Au;
    static const char32_t COMBINING_INVERTED_DOUBLE_ARCH_BELOW = 0x032Bu;
    static const char32_t COMBINING_CARON_BELOW = 0x032Cu;
    static const char32_t COMBINING_CIRCUMFLEX_ACCENT_BELOW = 0x032Du;
    static const char32_t COMBINING_BREVE_BELOW = 0x032Eu;
    static const char32_t COMBINING_INVERTED_BREVE_BELOW = 0x032Fu;
    static const char32_t COMBINING_TILDE_BELOW = 0x0330u;
    static const char32_t COMBINING_MACRON_BELOW = 0x0331u;
    static const char32_t COMBINING_LOW_LINE = 0x0332u;
    static const char32_t COMBINING_DOUBLE_LOW_LINE = 0x0333u;
    static const char32_t COMBINING_TILDE_OVERLAY = 0x0334u;
    static const char32_t COMBINING_SHORT_STROKE_OVERLAY = 0x0335u;
    static const char32_t COMBINING_LONG_STROKE_OVERLAY = 0x0336u;
    static const char32_t COMBINING_SHORT_SOLIDUS_OVERLAY = 0x0337u;
    static const char32_t COMBINING_LONG_SOLIDUS_OVERLAY = 0x0338u;
    static const char32_t COMBINING_RIGHT_HALF_RING_BELOW = 0x0339u;
    static const char32_t COMBINING_INVERTED_BRIDGE_BELOW = 0x033Au;
    static const char32_t COMBINING_SQUARE_BELOW = 0x033Bu;
    static const char32_t COMBINING_SEAGULL_BELOW = 0x033Cu;
    static const char32_t COMBINING_X_ABOVE = 0x033Du;
    static const char32_t COMBINING_VERTICAL_TILDE = 0x033Eu;
    static const char32_t COMBINING_DOUBLE_OVERLINE = 0x033Fu;
    static const char32_t COMBINING_GRAVE_TONE_MARK = 0x0340u;
    static const char32_t COMBINING_ACUTE_TONE_MARK = 0x0341u;
    static const char32_t COMBINING_GREEK_PERISPOMENI = 0x0342u;
    static const char32_t COMBINING_GREEK_KORONIS = 0x0343u;
    static const char32_t COMBINING_GREEK_DIALYTIKA_TONOS = 0x0344u;
    static const char32_t COMBINING_GREEK_YPOGEGRAMMENI = 0x0345u;
    static const char32_t COMBINING_BRIDGE_ABOVE = 0x0346u;
    static const char32_t COMBINING_EQUALS_SIGN_BELOW = 0x0347u;
    static const char32_t COMBINING_DOUBLE_VERTICAL_LINE_BELOW = 0x0348u;
    static const char32_t COMBINING_LEFT_ANGLE_BELOW = 0x0349u;
    static const char32_t COMBINING_NOT_TILDE_ABOVE = 0x034Au;
    static const char32_t COMBINING_HOMOTHETIC_ABOVE = 0x034Bu;
    static const char32_t COMBINING_ALMOST_EQUAL_TO_ABOVE = 0x034Cu;
    static const char32_t COMBINING_LEFT_RIGHT_ARROW_BELOW = 0x034Du;
    static const char32_t COMBINING_UPWARDS_ARROW_BELOW = 0x034Eu;
    static const char32_t COMBINING_GRAPHEME_JOINER = 0x034Fu;
    static const char32_t COMBINING_RIGHT_ARROWHEAD_ABOVE = 0x0350u;
    static const char32_t COMBINING_LEFT_HALF_RING_ABOVE = 0x0351u;
    static const char32_t COMBINING_FERMATA = 0x0352u;
    static const char32_t COMBINING_X_BELOW = 0x0353u;
    static const char32_t COMBINING_LEFT_ARROWHEAD_BELOW = 0x0354u;
    static const char32_t COMBINING_RIGHT_ARROWHEAD_BELOW = 0x0355u;
    static const char32_t COMBINING_RIGHT_ARROWHEAD_AND_UP_ARROWHEAD_BELOW = 0x0356u;
    static const char32_t COMBINING_RIGHT_HALF_RING_ABOVE = 0x0357u;
    static const char32_t COMBINING_DOT_ABOVE_RIGHT = 0x0358u;
    static const char32_t COMBINING_ASTERISK_BELOW = 0x0359u;
    static const char32_t COMBINING_DOUBLE_RING_BELOW = 0x035Au;
    static const char32_t COMBINING_ZIGZAG_ABOVE = 0x035Bu;
    static const char32_t COMBINING_DOUBLE_BREVE_BELOW = 0x035Cu;
    static const char32_t COMBINING_DOUBLE_BREVE = 0x035Du;
    static const char32_t COMBINING_DOUBLE_MACRON = 0x035Eu;
    static const char32_t COMBINING_DOUBLE_MACRON_BELOW = 0x035Fu;
    static const char32_t COMBINING_DOUBLE_TILDE = 0x0360u;
    static const char32_t COMBINING_DOUBLE_INVERTED_BREVE = 0x0361u;
    static const char32_t COMBINING_DOUBLE_RIGHTWARDS_ARROW_BELOW = 0x0362u;
    static const char32_t COMBINING_LATIN_SMALL_A = 0x0363u;
    static const char32_t COMBINING_LATIN_SMALL_E = 0x0364u;
    static const char32_t COMBINING_LATIN_SMALL_I = 0x0365u;
    static const char32_t COMBINING_LATIN_SMALL_O = 0x0366u;
    static const char32_t COMBINING_LATIN_SMALL_U = 0x0367u;
    static const char32_t COMBINING_LATIN_SMALL_C = 0x0368u;
    static const char32_t COMBINING_LATIN_SMALL_D = 0x0369u;
    static const char32_t COMBINING_LATIN_SMALL_H = 0x036Au;
    static const char32_t COMBINING_LATIN_SMALL_M = 0x036Bu;
    static const char32_t COMBINING_LATIN_SMALL_R = 0x036Cu;
    static const char32_t COMBINING_LATIN_SMALL_T = 0x036Du;
    static const char32_t COMBINING_LATIN_SMALL_V = 0x036Eu;
    static const char32_t COMBINING_LATIN_SMALL_X = 0x036Fu;
    static const char32_t GREEK_CAPITAL_ALPHA = 0x0391u;
    static const char32_t GREEK_CAPITAL_BETA = 0x0392u;
    static const char32_t GREEK_CAPITAL_GAMMA = 0x0393u;
    static const char32_t GREEK_CAPITAL_DELTA = 0x0394u;
    static const char32_t GREEK_CAPITAL_EPSILON = 0x0395u;
    static const char32_t GREEK_CAPITAL_ZETA = 0x0396u;
    static const char32_t GREEK_CAPITAL_ETA = 0x0397u;
    static const char32_t GREEK_CAPITAL_THETA = 0x0398u;
    static const char32_t GREEK_CAPITAL_IOTA = 0x0399u;
    static const char32_t GREEK_CAPITAL_KAPPA = 0x039Au;
    static const char32_t GREEK_CAPITAL_LAMDA = 0x039Bu;
    static const char32_t GREEK_CAPITAL_MU = 0x039Cu;
    static const char32_t GREEK_CAPITAL_NU = 0x039Du;
    static const char32_t GREEK_CAPITAL_XI = 0x039Eu;
    static const char32_t GREEK_CAPITAL_OMICRON = 0x039Fu;
    static const char32_t GREEK_CAPITAL_PI = 0x03A0u;
    static const char32_t GREEK_CAPITAL_RHO = 0x03A1u;
    static const char32_t GREEK_CAPITAL_SIGMA = 0x03A3u;
    static const char32_t GREEK_CAPITAL_TAU = 0x03A4u;
    static const char32_t GREEK_CAPITAL_UPSILON = 0x03A5u;
    static const char32_t GREEK_CAPITAL_PHI = 0x03A6u;
    static const char32_t GREEK_CAPITAL_CHI = 0x03A7u;
    static const char32_t GREEK_CAPITAL_PSI = 0x03A8u;
    static const char32_t GREEK_CAPITAL_OMEGA = 0x03A9u;
    static const char32_t GREEK_SMALL_ALPHA = 0x03B1u;
    static const char32_t GREEK_SMALL_BETA = 0x03B2u;
    static const char32_t GREEK_SMALL_GAMMA = 0x03B3u;
    static const char32_t GREEK_SMALL_DELTA = 0x03B4u;
    static const char32_t GREEK_SMALL_EPSILON = 0x03B5u;
    static const char32_t GREEK_SMALL_ZETA = 0x03B6u;
    static const char32_t GREEK_SMALL_ETA = 0x03B7u;
    static const char32_t GREEK_SMALL_THETA = 0x03B8u;
    static const char32_t GREEK_SMALL_IOTA = 0x03B9u;
    static const char32_t GREEK_SMALL_KAPPA = 0x03BAu;
    static const char32_t GREEK_SMALL_LAMDA = 0x03BBu;
    static const char32_t GREEK_SMALL_MU = 0x03BCu;
    static const char32_t GREEK_SMALL_NU = 0x03BDu;
    static const char32_t GREEK_SMALL_XI = 0x03BEu;
    static const char32_t GREEK_SMALL_OMICRON = 0x03BFu;
    static const char32_t GREEK_SMALL_PI = 0x03C0u;
    static const char32_t GREEK_SMALL_RHO = 0x03C1u;
    static const char32_t GREEK_SMALL_FINAL_SIGMA = 0x03C2u;
    static const char32_t GREEK_SMALL_SIGMA = 0x03C3u;
    static const char32_t GREEK_SMALL_TAU = 0x03C4u;
    static const char32_t GREEK_SMALL_UPSILON = 0x03C5u;
    static const char32_t GREEK_SMALL_PHI = 0x03C6u;
    static const char32_t GREEK_SMALL_CHI = 0x03C7u;
    static const char32_t GREEK_SMALL_PSI = 0x03C8u;
    static const char32_t GREEK_SMALL_OMEGA = 0x03C9u;
    static const char32_t OGHAM_SPACE_MARK = 0x1680u;
    static const char32_t MONGOLIAN_VOWEL_SEPARATOR = 0x180Eu;
    static const char32_t EN_QUAD = 0x2000u;
    static const char32_t EM_QUAD = 0x2001u;
    static const char32_t EN_SPACE = 0x2002u;
    static const char32_t EM_SPACE = 0x2003u;
    static const char32_t THREE_PER_EM_SPACE = 0x2004u;
    static const char32_t FOUR_PER_EM_SPACE = 0x2005u;
    static const char32_t SIX_PER_EM_SPACE = 0x2006u;
    static const char32_t FIGURE_SPACE = 0x2007u;
    static const char32_t PUNCTUATION_SPACE = 0x2008u;
    static const char32_t THIN_SPACE = 0x2009u;
    static const char32_t HAIR_SPACE = 0x200Au;
    static const char32_t ZERO_WIDTH_SPACE = 0x200Bu;
    static const char32_t ZERO_WIDTH_NON_JOINER = 0x200Cu;
    static const char32_t ZERO_WIDTH_JOINER = 0x200Du;
    static const char32_t LINE_SEPARATOR = 0x2028u;
    static const char32_t PARAGRAPH_SEPARATOR = 0x2029u;
    static const char32_t NARROW_NO_BREAK_SPACE = 0x202Fu;
    static const char32_t MEDIUM_MATHEMATICAL_SPACE = 0x205Fu;
    static const char32_t WORD_JOINER = 0x2060u;
    static const char32_t IDEOGRAPHIC_SPACE = 0x3000u;
    static const char32_t ZERO_WIDTH_NO_BREAK_SPACE = 0xFEFFu;
    static const char32_t REPLACEMENT_CHARACTER = 0xFFFDu;
    static const char32_t INVALID = 0xFFFFFFFFu;
}}
